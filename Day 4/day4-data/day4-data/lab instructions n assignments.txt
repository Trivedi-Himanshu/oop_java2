Day 1
1. Create a new workspace for core Java
2. import day1.1 in your new workspace
Refer to readmes n diagrams , from today's help
3. Revise
flow, keywords n custom exceptions

4. Complete your pending work


Day 2
In the individual labs :
import day2.1 n revise
1. date_handling (Date class , SimpleDateFormat , parse n format methods)
2. string_handling (String n StringBuilder classes)
3. Revise wrapper classes
Solve : "day2_data\day2_help\wrappers code\Test.java"

4. Revise  inheritance in i/fs 

5. Reading n solving H.W
Important methods of the String class
concat,charAt,indexOf,lastIndexOf,toUpperCase,toLowerCase,format,split,matches,substring,startsWith,endsWith,trim

6. 
Objective : Showroom Management system , which will keep track of vehicles added in the showroom.

Objective : Accept vehicle details : chasisNo(string) : Unique ID, color(enum) , basePrice(double) , manufactureDate(Date),company,isAvailable

Note : vehicle's base price will increase as per the chosen color

Add  validation rules

6.1 manufactureDate : must be in after 1st Jan 2021
6.2 Vehicle color must be valid

Create a Tester class
Accept vehicle details. 
Invoke validation rules.
If n only if all validations succeed , then create Vehicle object.
Use toString to display it's details.


Day 3
In the individual labs , revise completely'
1.import day3.1 , to revise overriding of equal , using simple PK
2.import day3.2 , to revise overriding of equal , using compound PK
3. import day3.3 , to revise
validation rules
LocalDate API
custom exception 


4. Hands on (Complete as much as possible!)

We are going to build Customer management system, over next few days.

Typical  Options
1. Sign up (customer registration)
2. Sign in (login)
i/p : email n password
3. Change password
i/p : email n old password n new password
4. Un subscribe customer
i/p : customer email
5. Display all customers.
and many more.....
0. Exit 

Design 
Identify the core classes/enums involved
1. Customer class (core class)
state  : customer id(int) ,first name, last name (string),email(string),password(string),registrationAmount(double),dob(LocalDate),plan(ServicePlan : enum)
Must generate customer ids automatically : auto increment)
PK(UID) : email

Add suitable constructors.

Will you need to override toString n equals ?


2. ServicePlan : enum
ServicePlan charges : 
SILVER : 1000 
GOLD : 2000
DIAMOND : 5000
PLATINUM : 10000


3. custom exception class

4. validation rules
4.1 no dup customers 
(i.e if the customer tries to register using existing email , throw exception)

4.2 Validate plan
plan must be of supported types

4.3 reg amount must match with the plan


5. Tester, with UI , use scanner
Accept customer details
Validate i/ps (single method)
In case of successful validations , display customer details via toString or displat error mesg via custom exception.



Day 4
In the combined lab , revise : 
1. import day4.2 in your workspace
(File --import --General --Existing projects in workspace --Browse n choose project folder 
check copy check box , to copy it in your workspace.)
1.1 Refer to sample data , from today's sequence.
1.2 Add a method in ShowroomUtils to return populated showroom.
1.3. Revise all options

2. Hands on (complete as much as possible)
Continue with day3 customer assignment
If you have completed it , continue with your project or import "day3_lab_practice" in your workspace.
Solve these options

1. Sign up (customer registration)
eg.sop("enter customer details");
validate all i/ps --in case errs --catch-all --continues
no errs -- custList.add(customer);

2. Sign in (login)
i/p : email n password
eg: custList.contains(new Customer(email))--true (x)
can use indexOf and then get 
then checking the password 


o.w.f --> throw exc: invalid email!!!


3. Change password
i/p : email n old password n new password

4. Un subscribe customer
i/p : customer email

5. Display all customers.

0. Exit 




#######################################################################

abc123 red 23000 2023-01-03 Honda
abc1234 red 23000 2023-01-03 Honda
abc123 red 23000 2023-01-03 Honda